/*
 * Copyright (c) 2019 Geode-solutions
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

/*!

\page opengeode_how_to_compile How to compile OpenGeode

# What do you need

## OS 

OpenGeode is supported and continuously tested on several platforms:

* Windows - Visual Studio 2017
* Ubuntu 18.04
* macOS X Mojave (10.14)

Pre-compiled binaries on these three platforms are also provided. \link opengeode_where_to_get_binaries This page\endlink describes where to download these binaries.

## CMake

OpenGeode comes with a CMake configuration file. You can modified two items:

* `CMAKE_BUILD_TYPE`: choose build configuration (Release, Debug). By default Release.
* `OPENGEODE_WITH_TESTS`: switch on/off the OpenGeode test environment

Your version of CMake should be at least 3.7.2 (3.11 for MacOS Mojave and above users).

## Compiler

On Windows, we recommend to use Visual Studio 15 2017. On Linux and macOS, you can use gcc/g++ as compiler. You need a version equal to or higher than 4.8.
On macOS, you can also install Mac OS "Command Line Developer Tools" and use clang.


# OpenGeode configuration and compilation

The configuration and compiling of OpenGeode is very simple. This will be achieved in few steps depending on your platform.

## On Windows

### Configuration

1. Launch CMake interface.
2. Set where is the OpenGeode source code and where to build the binaries as path/to/OpenGeode/build.
3. Choose your configuration options. Take care to choose as current generator `Visual Studio 15 2017`.
4. Launch the configure and generate option. 

### Compilation

1. Click on `Open Project` in the CMake interface. It opens Visual Studio 2017 and the generated solution.
2. Build the solution. 

That's all! You are ready to work with OpenGeode.


## On Linux

### Configuration

1. Open a terminal where is the OpenGeode source code.
2. Create a `build` directory: 
\code mkdir build; cd build \endcode
3. Run cmake:
\code cmake .. \endcode for default configuration or \code ccmake .. \endcode or \code cmake-gui .. \endcode for choosing configuration options.

### Compilation

1. Run `make` command in the build directory.

Now you are ready to work with OpenGeode.


## On macOS

### Configuration

1. Open a terminal where is the OpenGeode source code.
2. Create a `build` directory: 
\codemkdir build; cd build \endcode
3. Run cmake:
\code cmake .. \endcode for default configuration or \code ccmake .. \endcode or \code cmake-gui .. \endcode for choosing configuration options.

If you want to use Xcode, we suggest you to use CMake GUI interface to select Xcode as generator (or use cmake options "-G Xcode" command lines).

### Compilation

#### Without Xcode (Clang in command line)
Run `make` command in the build directory.

#### With Xcode
* Open the project "SuperBuild.xcodeproj" with Xcode: `open SuperBuild.xcodeproj`, and then compile using the graphical interface.

Or, you can directly compile with the terminal: `xcodebuild -project SuperBuild.xcodeproj -alltargets -configuration Release`.
Replace "Release" by "Debug" to compile in debug mode.

Now you are ready to work with OpenGeode.


*/
