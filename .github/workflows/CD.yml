name: CD

on:
  push:
    tags: 'v*'

jobs:      
  release-linux:
    runs-on: ubuntu-18.04
    container: ${{ matrix.config.container }}
    strategy:
      matrix:
        config:
        - {container: "geodesolutions/ubuntu", system: "ubuntu", doc: true}
        - {container: "geodesolutions/centos", system: "rhel", doc: false}
        
    steps:
    - uses: actions/checkout@v1
    - name: Cache Abseil
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/abseil
        key: abseil-${{ matrix.config.system }}-Release-${{ hashFiles('cmake/ConfigureAbseil.cmake') }}
    - name: Cache Async++
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/asyncplusplus
        key: asyncplusplus-${{ matrix.config.system }}-Release-${{ hashFiles('cmake/ConfigureAsync++.cmake') }}
    - name: Cache Filesystem
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/ghcFilesystem
        key: ghcFilesystem-${{ matrix.config.system }}-Release-${{ hashFiles('cmake/ConfigureFilesystem.cmake') }}
    - name: Cache Minizip
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/minizip
        key: minizip-${{ matrix.config.system }}-Release-${{ hashFiles('cmake/ConfigureMinizip.cmake') }}
    - name: Cache Nanoflann
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/nanoflann
        key: nanoflann-${{ matrix.config.system }}-Release-${{ hashFiles('cmake/ConfigureNanoflann.cmake') }}
    - name: Cache Pybind11
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/pybind11
        key: pybind11-${{ matrix.config.system }}-Release-${{ hashFiles('cmake/ConfigurePybind11.cmake') }}
    - name: Cache Spdlog
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/spdlog
        key: spdlog-${{ matrix.config.system }}-Release-${{ hashFiles('cmake/ConfigureSpdlog.cmake') }}
    - name: Generate package
      id: package
      run: |
        mkdir -p build
        cd build
        version="${GITHUB_REF##*/*/}"
        echo ::set-output name=version::$version
        cmake -DCMAKE_BUILD_TYPE=Release -DOPENGEODE_WITH_PYTHON:BOOL=ON -DOPENGEODE_WITH_TESTS:BOOL=OFF -DCPACK_PACKAGE_VERSION:STRING=$version -DCPACK_SYSTEM_NAME:STRING=${{ matrix.config.system }} ..
        cmake --build . -- -j2
        cd opengeode
        cmake --build . --target package
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "build/opengeode/OpenGeode-${{Â steps.package.outputs.version }}-${{ matrix.config.system }}.tar.gz"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Doc
      if: matrix.config.doc
      run: curl -s https://raw.githubusercontent.com/Geode-solutions/actions/master/doc/doc.sh | bash -s -- ${GITHUB_WORKSPACE}/build/opengeode
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
    - name: Notify slack
      if: failure()
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  release-mac:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    # - name: Cache Abseil
    #   uses: actions/cache@v1.0.3
    #   with:
    #     path: build/third_party/abseil
    #     key: abseil-darwin-Release-${{ hashFiles('cmake/ConfigureAbseil.cmake') }}
    # - name: Cache Async++
    #   uses: actions/cache@v1.0.3
    #   with:
    #     path: build/third_party/asyncplusplus
    #     key: asyncplusplus-darwin-Release-${{ hashFiles('cmake/ConfigureAsync++.cmake') }}
    # - name: Cache Filesystem
    #   uses: actions/cache@v1.0.3
    #   with:
    #     path: build/third_party/ghcFilesystem
    #     key: ghcFilesystem-darwin-Release-${{ hashFiles('cmake/ConfigureFilesystem.cmake') }}
    # - name: Cache Minizip
    #   uses: actions/cache@v1.0.3
    #   with:
    #     path: build/third_party/minizip
    #     key: minizip-darwin-Release-${{ hashFiles('cmake/ConfigureMinizip.cmake') }}
    # - name: Cache Nanoflann
    #   uses: actions/cache@v1.0.3
    #   with:
    #     path: build/third_party/nanoflann
    #     key: nanoflann-darwin-Release-${{ hashFiles('cmake/ConfigureNanoflann.cmake') }}
    # - name: Cache Pybind11
    #   uses: actions/cache@v1.0.3
    #   with:
    #     path: build/third_party/pybind11
    #     key: pybind11-darwin-Release-${{ hashFiles('cmake/ConfigurePybind11.cmake') }}
    # - name: Cache Spdlog
    #   uses: actions/cache@v1.0.3
    #   with:
    #     path: build/third_party/spdlog
    #     key: spdlog-darwin-Release-${{ hashFiles('cmake/ConfigureSpdlog.cmake') }}
    - name: Generate package
      id: package
      run: |
        mkdir -p build
        cd build
        version="${GITHUB_REF##*/*/}"
        echo ::set-output name=version::$version
        cmake -G "Xcode" -DCMAKE_BUILD_TYPE=Release -DOPENGEODE_WITH_PYTHON:BOOL=ON -DOPENGEODE_WITH_TESTS:BOOL=OFF -DCPACK_PACKAGE_VERSION:STRING=$version -DCPACK_SYSTEM_NAME:STRING=darwin ..
        cmake --build . --config Release
        cd opengeode
        cmake --build . --target package --config Release
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "build/opengeode/OpenGeode-${{ steps.package.outputs.version }}-darwin.tar.gz"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure()
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  release-windows:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v1
    - name: Cache Abseil
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/abseil
        key: abseil-win64-Release-${{ hashFiles('cmake/ConfigureAbseil.cmake') }}
    - name: Cache Async++
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/asyncplusplus
        key: asyncplusplus-win64-Release-${{ hashFiles('cmake/ConfigureAsync++.cmake') }}
    - name: Cache Filesystem
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/ghcFilesystem
        key: ghcFilesystem-win64-Release-${{ hashFiles('cmake/ConfigureFilesystem.cmake') }}
    - name: Cache Minizip
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/minizip
        key: minizip-win64-Release-${{ hashFiles('cmake/ConfigureMinizip.cmake') }}
    - name: Cache Nanoflann
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/nanoflann
        key: nanoflann-win64-Release-${{ hashFiles('cmake/ConfigureNanoflann.cmake') }}
    - name: Cache Pybind11
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/pybind11
        key: pybind11-win64-Release-${{ hashFiles('cmake/ConfigurePybind11.cmake') }}
    - name: Cache Spdlog
      uses: actions/cache@v1.0.3
      with:
        path: build/third_party/spdlog
        key: spdlog-win64-Release-${{ hashFiles('cmake/ConfigureSpdlog.cmake') }}
    - name: Generate package
      id: package
      run: |
        if(!(test-path build)) { mkdir build }
        cd build
        $version = ${env:GITHUB_REF} -replace 'refs\/tags\/', ''
        echo "::set-output name=version::$version"
        cmake -G "Visual Studio 15 2017 Win64" -DOPENGEODE_WITH_PYTHON:BOOL=ON -DOPENGEODE_WITH_TESTS:BOOL=OFF -DCPACK_PACKAGE_VERSION:STRING=$version -DCPACK_SYSTEM_NAME:STRING=win64 ..
        cmake --build . --config Release
        cd opengeode
        cmake --build . --target PACKAGE --config Release
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "build/opengeode/OpenGeode-${{ steps.package.outputs.version }}-win64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure()
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
